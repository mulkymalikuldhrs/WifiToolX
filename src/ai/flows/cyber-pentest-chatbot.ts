'use server';

/**
 * @fileOverview A Cyber Pentesting Chatbot AI agent.
 *
 * - cyberPentestChatbot - A function that handles the chatbot interaction.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import type { CyberPentestChatbotInput, CyberPentestChatbotOutput } from '@/lib/types';


export const ChatMessageSchema = z.object({
  role: z.enum(['user', 'model']),
  content: z.string(),
});

export const CyberPentestChatbotInputSchema = z.object({
  history: z.array(ChatMessageSchema).describe("The conversation history."),
  message: z.string().describe('The latest message from the user.'),
});


export const CyberPentestChatbotOutputSchema = z.object({
  response: z.string().describe('The AI-generated response.'),
});


export async function cyberPentestChatbot(
  input: CyberPentestChatbotInput
): Promise<CyberPentestChatbotOutput> {
  return cyberPentestChatbotFlow(input);
}

const prompt = ai.definePrompt({
  name: 'cyberPentestChatbotPrompt',
  input: {schema: CyberPentestChatbotInputSchema},
  output: {schema: CyberPentestChatbotOutputSchema},
  prompt: `You are a helpful and highly knowledgeable Cyber Pentest AI Assistant integrated into a tool called WiFiHunterX. Your role is to assist users with their penetration testing queries.

  You should be able to:
  - Explain cybersecurity concepts clearly.
  - Provide examples of commands for various tools (e.g., nmap, aircrack-ng, hashcat, metasploit).
  - Suggest methodologies for different types of penetration tests.
  - Answer questions about vulnerabilities and exploits.

  When providing commands, always add a disclaimer that they should only be used on networks and systems for which the user has explicit, written permission to test. Do not provide instructions for illegal or unethical activities.

  Here is the conversation history:
  {{#each history}}
    {{#if (eq role 'user')}}
      User: {{{content}}}
    {{else}}
      Model: {{{content}}}
    {{/if}}
  {{/each}}

  User's new message: {{{message}}}

  Provide a direct, helpful, and concise response to the user's latest message.
`,
});

const cyberPentestChatbotFlow = ai.defineFlow(
  {
    name: 'cyberPentestChatbotFlow',
    inputSchema: CyberPentestChatbotInputSchema,
    outputSchema: CyberPentestChatbotOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
